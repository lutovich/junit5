apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
	engines {
		include 'junit-jupiter'
	}
	includeClassNamePattern '.*Tests?'
	logManager 'org.apache.logging.log4j.jul.LogManager'
}

dependencies {
	// --- Things we are testing --------------------------------------------------
	testCompile(project(':junit-platform-commons'))
	testCompile(project(':junit-platform-console'))
	testCompile(project(':junit-platform-engine'))
	testCompile(project(':junit-platform-launcher'))

	// --- Things we are testing with ---------------------------------------------
	testCompile(project(':junit-jupiter-api'))
	testCompile(project(':junit-platform-runner'))
	testCompile(project(':junit-jupiter-engine'))
	testCompile(project(':junit-platform-surefire-provider'))
	testCompile(project(path: ':junit-platform-engine', configuration: 'testArtifacts'))
	testCompile("org.assertj:assertj-core:${assertJVersion}")
	testCompile("org.mockito:mockito-core:${mockitoVersion}")
	testCompile('org.apache.maven:maven-embedder:3.3.9')
	testCompile('org.eclipse.aether:aether-connector-basic:1.0.2.v20150114')
	testCompile('org.eclipse.aether:aether-transport-wagon:1.0.2.v20150114')
	testCompile('org.apache.maven.wagon:wagon-http:2.8')
	testCompile('org.apache.maven.wagon:wagon-provider-api:2.8')
	testCompile('org.apache.httpcomponents:httpclient:4.3')

	testCompile('org.apache.velocity:velocity:1.7')


	// --- Test run-time dependencies ---------------------------------------------
	testRuntime(project(':junit-jupiter-engine'))
	testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
}
